//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-20051113-fcs 
// 	See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// 	Any modifications to this file will be lost upon recompilation of the source schema. 
// 	Generated on: 2005.11.16 um 11:03:34 CET 
//


package phex.xml.impl;

public class XJBSWDownloadCandidateImpl implements phex.xml.XJBSWDownloadCandidate, com.sun.xml.bind.JAXBObject, phex.xml.impl.runtime.UnmarshallableObject, phex.xml.impl.runtime.XMLSerializable
{

    protected java.lang.String _RemoteHost;
    protected boolean has_ThexSupported;
    protected boolean _ThexSupported;
    protected boolean has_ConnectionFailedRepetition;
    protected int _ConnectionFailedRepetition;
    protected java.lang.String _GUID;
    protected boolean has_LastConnectionTime;
    protected long _LastConnectionTime;
    protected boolean has_PushNeeded;
    protected boolean _PushNeeded;
    protected java.lang.String _DownloadURI;
    protected java.lang.String _FileName;
    protected boolean has_FileIndex;
    protected long _FileIndex;
    protected phex.xml.XJBSWDownloadCandidate.RatingElement _Rating;
    protected boolean has_ChatSupported;
    protected boolean _ChatSupported;
    protected java.lang.String _Vendor;
    public final static java.lang.Class version = (phex.xml.impl.JAXBVersion.class);

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (phex.xml.XJBSWDownloadCandidate.class);
    }

    public java.lang.String getRemoteHost() {
        return _RemoteHost;
    }

    public void setRemoteHost(java.lang.String value) {
        _RemoteHost = value;
    }

    public boolean isThexSupported() {
        return _ThexSupported;
    }

    public void setThexSupported(boolean value) {
        _ThexSupported = value;
        has_ThexSupported = true;
    }

    public int getConnectionFailedRepetition() {
        return _ConnectionFailedRepetition;
    }

    public void setConnectionFailedRepetition(int value) {
        _ConnectionFailedRepetition = value;
        has_ConnectionFailedRepetition = true;
    }

    public java.lang.String getGUID() {
        return _GUID;
    }

    public void setGUID(java.lang.String value) {
        _GUID = value;
    }

    public long getLastConnectionTime() {
        return _LastConnectionTime;
    }

    public void setLastConnectionTime(long value) {
        _LastConnectionTime = value;
        has_LastConnectionTime = true;
    }

    public boolean isSetLastConnectionTime() {
        return has_LastConnectionTime;
    }

    public void unsetLastConnectionTime() {
        has_LastConnectionTime = false;
    }

    public boolean isPushNeeded() {
        return _PushNeeded;
    }

    public void setPushNeeded(boolean value) {
        _PushNeeded = value;
        has_PushNeeded = true;
    }

    public java.lang.String getDownloadURI() {
        return _DownloadURI;
    }

    public void setDownloadURI(java.lang.String value) {
        _DownloadURI = value;
    }

    public java.lang.String getFileName() {
        return _FileName;
    }

    public void setFileName(java.lang.String value) {
        _FileName = value;
    }

    public long getFileIndex() {
        return _FileIndex;
    }

    public void setFileIndex(long value) {
        _FileIndex = value;
        has_FileIndex = true;
    }

    public phex.xml.XJBSWDownloadCandidate.RatingElement getRating() {
        return _Rating;
    }

    public void setRating(phex.xml.XJBSWDownloadCandidate.RatingElement value) {
        _Rating = value;
    }

    public boolean isChatSupported() {
        return _ChatSupported;
    }

    public void setChatSupported(boolean value) {
        _ChatSupported = value;
        has_ChatSupported = true;
    }

    public java.lang.String getVendor() {
        return _Vendor;
    }

    public void setVendor(java.lang.String value) {
        _Vendor = value;
    }

    public phex.xml.impl.runtime.UnmarshallingEventHandler createUnmarshaller(phex.xml.impl.runtime.UnmarshallingContext context) {
        return new phex.xml.impl.XJBSWDownloadCandidateImpl.Unmarshaller(context);
    }

    public void serializeBody(phex.xml.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_GUID!= null) {
            context.startElement("", "guid");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _GUID), "GUID");
            } catch (java.lang.Exception e) {
                phex.xml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_FileIndex) {
            context.startElement("", "fileindex");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printLong(((long) _FileIndex)), "FileIndex");
            } catch (java.lang.Exception e) {
                phex.xml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_LastConnectionTime) {
            context.startElement("", "last-connect");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printLong(((long) _LastConnectionTime)), "LastConnectionTime");
            } catch (java.lang.Exception e) {
                phex.xml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_FileName!= null) {
            context.startElement("", "filename");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _FileName), "FileName");
            } catch (java.lang.Exception e) {
                phex.xml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_DownloadURI!= null) {
            context.startElement("", "download-uri");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _DownloadURI), "DownloadURI");
            } catch (java.lang.Exception e) {
                phex.xml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_RemoteHost!= null) {
            context.startElement("", "remotehost");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _RemoteHost), "RemoteHost");
            } catch (java.lang.Exception e) {
                phex.xml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_ConnectionFailedRepetition) {
            context.startElement("", "connectionFailedRepetition");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _ConnectionFailedRepetition)), "ConnectionFailedRepetition");
            } catch (java.lang.Exception e) {
                phex.xml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Rating!= null) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Rating), "Rating");
        }
        if (_Vendor!= null) {
            context.startElement("", "vendor");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Vendor), "Vendor");
            } catch (java.lang.Exception e) {
                phex.xml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_PushNeeded) {
            context.startElement("", "isPushNeeded");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _PushNeeded)), "PushNeeded");
            } catch (java.lang.Exception e) {
                phex.xml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_ThexSupported) {
            context.startElement("", "isThexSupported");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _ThexSupported)), "ThexSupported");
            } catch (java.lang.Exception e) {
                phex.xml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_ChatSupported) {
            context.startElement("", "isChatSupported");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _ChatSupported)), "ChatSupported");
            } catch (java.lang.Exception e) {
                phex.xml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
    }

    public void serializeAttributes(phex.xml.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_Rating!= null) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Rating), "Rating");
        }
    }

    public void serializeURIs(phex.xml.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_Rating!= null) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Rating), "Rating");
        }
    }

    public static class RatingElementImpl implements phex.xml.XJBSWDownloadCandidate.RatingElement, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, phex.xml.impl.runtime.UnmarshallableObject, phex.xml.impl.runtime.XMLSerializable
    {

        protected boolean has_Value;
        protected short _Value;
        public final static java.lang.Class version = (phex.xml.impl.JAXBVersion.class);

        public RatingElementImpl() {
        }

        public RatingElementImpl(short value) {
            _Value = value;
            has_Value = true;
        }

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (phex.xml.XJBSWDownloadCandidate.RatingElement.class);
        }

        public java.lang.String ____jaxb_ri____getNamespaceURI() {
            return "";
        }

        public java.lang.String ____jaxb_ri____getLocalName() {
            return "rating";
        }

        public short getValue() {
            return _Value;
        }

        public void setValue(short value) {
            _Value = value;
            has_Value = true;
        }

        public phex.xml.impl.runtime.UnmarshallingEventHandler createUnmarshaller(phex.xml.impl.runtime.UnmarshallingContext context) {
            return new phex.xml.impl.XJBSWDownloadCandidateImpl.RatingElementImpl.Unmarshaller(context);
        }

        public void serializeBody(phex.xml.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            if (!has_Value) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Value"));
            }
            context.startElement("", "rating");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printShort(((short) _Value)), "Value");
            } catch (java.lang.Exception e) {
                phex.xml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }

        public void serializeAttributes(phex.xml.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            if (!has_Value) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Value"));
            }
        }

        public void serializeURIs(phex.xml.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            if (!has_Value) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Value"));
            }
        }

        public class Unmarshaller
            extends phex.xml.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(phex.xml.impl.runtime.UnmarshallingContext context) {
                super(context, "----");
            }

            protected Unmarshaller(phex.xml.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return phex.xml.impl.XJBSWDownloadCandidateImpl.RatingElementImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  0 :
                            if (("rating" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 1;
                                return ;
                            }
                            break;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  2 :
                            if (("rating" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                            case  1 :
                                state = 2;
                                eatText1(value);
                                return ;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Value = javax.xml.bind.DatatypeConverter.parseShort(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_Value = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

        }

    }

    public class Unmarshaller
        extends phex.xml.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(phex.xml.impl.runtime.UnmarshallingContext context) {
            super(context, "-----------------------------------");
        }

        protected Unmarshaller(phex.xml.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return phex.xml.impl.XJBSWDownloadCandidateImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        if (("connectionFailedRepetition" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  12 :
                        if (("download-uri" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  15 :
                        if (("remotehost" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  3 :
                        if (("fileindex" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  6 :
                        if (("last-connect" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  34 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  21 :
                        if (("rating" == ___local)&&("" == ___uri)) {
                            _Rating = ((phex.xml.impl.XJBSWDownloadCandidateImpl.RatingElementImpl) spawnChildFromEnterElement((phex.xml.impl.XJBSWDownloadCandidateImpl.RatingElementImpl.class), 22, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 22;
                        continue outer;
                    case  31 :
                        if (("isChatSupported" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 32;
                            return ;
                        }
                        state = 34;
                        continue outer;
                    case  9 :
                        if (("filename" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  22 :
                        if (("vendor" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 23;
                            return ;
                        }
                        state = 25;
                        continue outer;
                    case  0 :
                        if (("guid" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  28 :
                        if (("isThexSupported" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 29;
                            return ;
                        }
                        state = 31;
                        continue outer;
                    case  25 :
                        if (("isPushNeeded" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 26;
                            return ;
                        }
                        state = 28;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  11 :
                        if (("filename" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  20 :
                        if (("connectionFailedRepetition" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  5 :
                        if (("fileindex" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  24 :
                        if (("vendor" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 25;
                            return ;
                        }
                        break;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  34 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  17 :
                        if (("remotehost" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("download-uri" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  21 :
                        state = 22;
                        continue outer;
                    case  31 :
                        state = 34;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  22 :
                        state = 25;
                        continue outer;
                    case  8 :
                        if (("last-connect" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  27 :
                        if (("isPushNeeded" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 28;
                            return ;
                        }
                        break;
                    case  33 :
                        if (("isChatSupported" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 34;
                            return ;
                        }
                        break;
                    case  2 :
                        if (("guid" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  28 :
                        state = 31;
                        continue outer;
                    case  25 :
                        state = 28;
                        continue outer;
                    case  30 :
                        if (("isThexSupported" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 31;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        state = 21;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  34 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  21 :
                        state = 22;
                        continue outer;
                    case  31 :
                        state = 34;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  22 :
                        state = 25;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  28 :
                        state = 31;
                        continue outer;
                    case  25 :
                        state = 28;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        state = 21;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  34 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  21 :
                        state = 22;
                        continue outer;
                    case  31 :
                        state = 34;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  22 :
                        state = 25;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  28 :
                        state = 31;
                        continue outer;
                    case  25 :
                        state = 28;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            state = 2;
                            eatText1(value);
                            return ;
                        case  23 :
                            state = 24;
                            eatText2(value);
                            return ;
                        case  29 :
                            state = 30;
                            eatText3(value);
                            return ;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  10 :
                            state = 11;
                            eatText4(value);
                            return ;
                        case  4 :
                            state = 5;
                            eatText5(value);
                            return ;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  26 :
                            state = 27;
                            eatText6(value);
                            return ;
                        case  16 :
                            state = 17;
                            eatText7(value);
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  7 :
                            state = 8;
                            eatText8(value);
                            return ;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  32 :
                            state = 33;
                            eatText9(value);
                            return ;
                        case  34 :
                            revertToParentFromText(value);
                            return ;
                        case  21 :
                            state = 22;
                            continue outer;
                        case  31 :
                            state = 34;
                            continue outer;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  22 :
                            state = 25;
                            continue outer;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  13 :
                            state = 14;
                            eatText10(value);
                            return ;
                        case  19 :
                            state = 20;
                            eatText11(value);
                            return ;
                        case  28 :
                            state = 31;
                            continue outer;
                        case  25 :
                            state = 28;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _GUID = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Vendor = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ThexSupported = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ThexSupported = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _FileName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _FileIndex = javax.xml.bind.DatatypeConverter.parseLong(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_FileIndex = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PushNeeded = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_PushNeeded = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RemoteHost = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _LastConnectionTime = javax.xml.bind.DatatypeConverter.parseLong(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_LastConnectionTime = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ChatSupported = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ChatSupported = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DownloadURI = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ConnectionFailedRepetition = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ConnectionFailedRepetition = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
