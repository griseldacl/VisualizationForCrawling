//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-20051113-fcs 
// 	See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// 	Any modifications to this file will be lost upon recompilation of the source schema. 
// 	Generated on: 2005.11.16 um 11:03:34 CET 
//


package phex.xml.impl;

public class XJBUpdateResponseImpl implements phex.xml.XJBUpdateResponse, com.sun.xml.bind.JAXBObject, phex.xml.impl.runtime.UnmarshallableObject, phex.xml.impl.runtime.XMLSerializable
{

    protected com.sun.xml.bind.util.ListImpl _VersionList;
    protected com.sun.xml.bind.util.ListImpl _InfoList;
    public final static java.lang.Class version = (phex.xml.impl.JAXBVersion.class);

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (phex.xml.XJBUpdateResponse.class);
    }

    protected com.sun.xml.bind.util.ListImpl _getVersionList() {
        if (_VersionList == null) {
            _VersionList = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _VersionList;
    }

    public java.util.List getVersionList() {
        return _getVersionList();
    }

    protected com.sun.xml.bind.util.ListImpl _getInfoList() {
        if (_InfoList == null) {
            _InfoList = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _InfoList;
    }

    public java.util.List getInfoList() {
        return _getInfoList();
    }

    public phex.xml.impl.runtime.UnmarshallingEventHandler createUnmarshaller(phex.xml.impl.runtime.UnmarshallingContext context) {
        return new phex.xml.impl.XJBUpdateResponseImpl.Unmarshaller(context);
    }

    public void serializeBody(phex.xml.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_VersionList == null)? 0 :_VersionList.size());
        int idx2 = 0;
        final int len2 = ((_InfoList == null)? 0 :_InfoList.size());
        while (idx1 != len1) {
            context.startElement("", "version");
            int idx_0 = idx1;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _VersionList.get(idx_0 ++)), "VersionList");
            context.endNamespaceDecls();
            int idx_1 = idx1;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _VersionList.get(idx_1 ++)), "VersionList");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _VersionList.get(idx1 ++)), "VersionList");
            context.endElement();
        }
        while (idx2 != len2) {
            context.startElement("", "info");
            int idx_2 = idx2;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _InfoList.get(idx_2 ++)), "InfoList");
            context.endNamespaceDecls();
            int idx_3 = idx2;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _InfoList.get(idx_3 ++)), "InfoList");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _InfoList.get(idx2 ++)), "InfoList");
            context.endElement();
        }
    }

    public void serializeAttributes(phex.xml.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_VersionList == null)? 0 :_VersionList.size());
        int idx2 = 0;
        final int len2 = ((_InfoList == null)? 0 :_InfoList.size());
        while (idx1 != len1) {
            idx1 += 1;
        }
        while (idx2 != len2) {
            idx2 += 1;
        }
    }

    public void serializeURIs(phex.xml.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_VersionList == null)? 0 :_VersionList.size());
        int idx2 = 0;
        final int len2 = ((_InfoList == null)? 0 :_InfoList.size());
        while (idx1 != len1) {
            idx1 += 1;
        }
        while (idx2 != len2) {
            idx2 += 1;
        }
    }

    public static class InfoTypeImpl implements phex.xml.XJBUpdateResponse.InfoType, com.sun.xml.bind.JAXBObject, phex.xml.impl.runtime.UnmarshallableObject, phex.xml.impl.runtime.XMLSerializable
    {

        protected java.lang.String _Text;
        protected java.lang.String _Header;
        protected java.lang.String _Id;
        public final static java.lang.Class version = (phex.xml.impl.JAXBVersion.class);

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (phex.xml.XJBUpdateResponse.InfoType.class);
        }

        public java.lang.String getText() {
            return _Text;
        }

        public void setText(java.lang.String value) {
            _Text = value;
        }

        public java.lang.String getHeader() {
            return _Header;
        }

        public void setHeader(java.lang.String value) {
            _Header = value;
        }

        public java.lang.String getId() {
            return _Id;
        }

        public void setId(java.lang.String value) {
            _Id = value;
        }

        public phex.xml.impl.runtime.UnmarshallingEventHandler createUnmarshaller(phex.xml.impl.runtime.UnmarshallingContext context) {
            return new phex.xml.impl.XJBUpdateResponseImpl.InfoTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(phex.xml.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            if (_Header!= null) {
                context.startElement("", "header");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _Header), "Header");
                } catch (java.lang.Exception e) {
                    phex.xml.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            if (_Text!= null) {
                context.startElement("", "text");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _Text), "Text");
                } catch (java.lang.Exception e) {
                    phex.xml.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
        }

        public void serializeAttributes(phex.xml.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            context.startAttribute("", "id");
            try {
                context.text(((java.lang.String) _Id), "Id");
            } catch (java.lang.Exception e) {
                phex.xml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }

        public void serializeURIs(phex.xml.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public class Unmarshaller
            extends phex.xml.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(phex.xml.impl.runtime.UnmarshallingContext context) {
                super(context, "----------");
            }

            protected Unmarshaller(phex.xml.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return phex.xml.impl.XJBUpdateResponseImpl.InfoTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  9 :
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  6 :
                            if (("text" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 7;
                                return ;
                            }
                            state = 9;
                            continue outer;
                        case  3 :
                            if (("header" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 4;
                                return ;
                            }
                            state = 6;
                            continue outer;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Id = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  9 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  8 :
                            if (("text" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 9;
                                return ;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  5 :
                            if (("header" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 6;
                                return ;
                            }
                            break;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  3 :
                            state = 6;
                            continue outer;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  9 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            if (("id" == ___local)&&("" == ___uri)) {
                                state = 1;
                                return ;
                            }
                            break;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  3 :
                            state = 6;
                            continue outer;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  9 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  2 :
                            if (("id" == ___local)&&("" == ___uri)) {
                                state = 3;
                                return ;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  3 :
                            state = 6;
                            continue outer;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  9 :
                                revertToParentFromText(value);
                                return ;
                            case  1 :
                                state = 2;
                                eatText1(value);
                                return ;
                            case  4 :
                                state = 5;
                                eatText2(value);
                                return ;
                            case  0 :
                                attIdx = context.getAttribute("", "id");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText1(v);
                                    continue outer;
                                }
                                break;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  7 :
                                state = 8;
                                eatText3(value);
                                return ;
                            case  3 :
                                state = 6;
                                continue outer;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

            private void eatText2(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Header = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText3(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Text = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

        }

    }

    public class Unmarshaller
        extends phex.xml.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(phex.xml.impl.runtime.UnmarshallingContext context) {
            super(context, "-------");
        }

        protected Unmarshaller(phex.xml.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return phex.xml.impl.XJBUpdateResponseImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        if (("info" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        if (("version" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  4 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  1 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  3 :
                        if (("version" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        if (("info" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  4 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  1 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  2 :
                        if (("version" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("info" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  4 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            _getInfoList().add(((phex.xml.impl.XJBUpdateResponseImpl.InfoTypeImpl) spawnChildFromEnterAttribute((phex.xml.impl.XJBUpdateResponseImpl.InfoTypeImpl.class), 5, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  1 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            _getVersionList().add(((phex.xml.impl.XJBUpdateResponseImpl.VersionTypeImpl) spawnChildFromEnterAttribute((phex.xml.impl.XJBUpdateResponseImpl.VersionTypeImpl.class), 2, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  3 :
                        state = 6;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  4 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  1 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        state = 6;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  6 :
                            revertToParentFromText(value);
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  4 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  1 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  3 :
                            state = 6;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

    public static class VersionTypeImpl implements phex.xml.XJBUpdateResponse.VersionType, com.sun.xml.bind.JAXBObject, phex.xml.impl.runtime.UnmarshallableObject, phex.xml.impl.runtime.XMLSerializable
    {

        protected boolean has_Beta;
        protected boolean _Beta;
        protected java.lang.String _Text;
        protected java.lang.String _Id;
        public final static java.lang.Class version = (phex.xml.impl.JAXBVersion.class);

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (phex.xml.XJBUpdateResponse.VersionType.class);
        }

        public boolean isBeta() {
            return _Beta;
        }

        public void setBeta(boolean value) {
            _Beta = value;
            has_Beta = true;
        }

        public java.lang.String getText() {
            return _Text;
        }

        public void setText(java.lang.String value) {
            _Text = value;
        }

        public java.lang.String getId() {
            return _Id;
        }

        public void setId(java.lang.String value) {
            _Id = value;
        }

        public phex.xml.impl.runtime.UnmarshallingEventHandler createUnmarshaller(phex.xml.impl.runtime.UnmarshallingContext context) {
            return new phex.xml.impl.XJBUpdateResponseImpl.VersionTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(phex.xml.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            if (!has_Beta) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Beta"));
            }
            if (_Text!= null) {
                context.startElement("", "text");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _Text), "Text");
                } catch (java.lang.Exception e) {
                    phex.xml.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
        }

        public void serializeAttributes(phex.xml.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            if (!has_Beta) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Beta"));
            }
            context.startAttribute("", "id");
            try {
                context.text(((java.lang.String) _Id), "Id");
            } catch (java.lang.Exception e) {
                phex.xml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            context.startAttribute("", "isBeta");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Beta)), "Beta");
            } catch (java.lang.Exception e) {
                phex.xml.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }

        public void serializeURIs(phex.xml.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            if (!has_Beta) {
                context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Beta"));
            }
        }

        public class Unmarshaller
            extends phex.xml.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(phex.xml.impl.runtime.UnmarshallingContext context) {
                super(context, "----------");
            }

            protected Unmarshaller(phex.xml.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return phex.xml.impl.XJBUpdateResponseImpl.VersionTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            attIdx = context.getAttribute("", "isBeta");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  6 :
                            if (("text" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 7;
                                return ;
                            }
                            state = 9;
                            continue outer;
                        case  9 :
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText2(v);
                                continue outer;
                            }
                            break;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Beta = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_Beta = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText2(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Id = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            attIdx = context.getAttribute("", "isBeta");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  9 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  8 :
                            if (("text" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 9;
                                return ;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText2(v);
                                continue outer;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            if (("isBeta" == ___local)&&("" == ___uri)) {
                                state = 4;
                                return ;
                            }
                            break;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  9 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            if (("id" == ___local)&&("" == ___uri)) {
                                state = 1;
                                return ;
                            }
                            break;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            attIdx = context.getAttribute("", "isBeta");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  5 :
                            if (("isBeta" == ___local)&&("" == ___uri)) {
                                state = 6;
                                return ;
                            }
                            break;
                        case  9 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText2(v);
                                continue outer;
                            }
                            break;
                        case  2 :
                            if (("id" == ___local)&&("" == ___uri)) {
                                state = 3;
                                return ;
                            }
                            break;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  3 :
                                attIdx = context.getAttribute("", "isBeta");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 6;
                                    eatText1(v);
                                    continue outer;
                                }
                                break;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  9 :
                                revertToParentFromText(value);
                                return ;
                            case  1 :
                                state = 2;
                                eatText2(value);
                                return ;
                            case  4 :
                                state = 5;
                                eatText1(value);
                                return ;
                            case  7 :
                                state = 8;
                                eatText3(value);
                                return ;
                            case  0 :
                                attIdx = context.getAttribute("", "id");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText2(v);
                                    continue outer;
                                }
                                break;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

            private void eatText3(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Text = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

        }

    }

}
